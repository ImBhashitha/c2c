import logging
import asyncio
from telethon import TelegramClient, events, Button
from decouple import config
from telethon.tl.functions.users import GetFullUserRequest

logging.basicConfig(format='[%(levelname) 5s/%(asctime)s] %(name)s: %(message)s', level=logging.INFO)

# start the bot
print("Starting...")
try:
    apiid = config("APP_ID", cast=int)
    apihash = config("API_HASH")
    bottoken = config("BOT_TOKEN")
    frm = config("FROM_CHANNEL", cast=int)
    tochnl = config("TO_CHANNEL", cast=int)
    datgbot = TelegramClient('bot', apiid, apihash).start(bot_token=bottoken)
except:
    print("Environment vars are missing! Kindly recheck.")
    print("Bot is quiting...")
    exit()


@datgbot.on(events.NewMessage(pattern="/start"))
async def _(event):
    ok = await datgbot(GetFullUserRequest(event.sender_id))
    await event.reply(f"‡∂Ü‡∂∫‡∑î‡∂∂‡∑ù‡∑Ä‡∂±‡∑ä`{ok.user.first_name}`!\n\n ‡∂∏‡∂∏ ‡∂î‡∂∂‡∑ö ‡∂¥‡∂ª‡∑í‡∑Å‡∑ì‡∂Ω‡∂ö ‡∑É‡∑ê‡∂ú‡∑Ä‡∑î‡∂∏‡∑ä BOT ‡∑Ä‡∑ö.\n ‡∂ö‡∂ª‡∑î‡∂´‡∑è‡∂ö‡∂ª  /help  ‡∂Ω‡∑ô‡∑É ‡∂í‡∑Ä‡∑è ‡∂∑‡∑è‡∑Ä‡∑í‡∂≠‡∂∫ ‡∂¥‡∑í‡∂Ω‡∑í‡∂∂‡∂Ø‡∑Ä ‡∂Ø‡∑ê‡∂±‡∑î‡∑Ä‡∂≠‡∑ä ‡∑Ä‡∂±‡∑ä‡∂± . \n[ü§ò](https://telegra.ph/file/1eca514b5e6202b1d92b3.jpg)", 
    buttons = [[Button.url("ü§ùMain Groupüõ∞Ô∏è", url="t.me/danuma01"), Button.url("üìùBot Newsüõ∏", url="https://t.me/Dbotai")],[Button.url("‚úàÔ∏èDeveloper‚úàÔ∏è", url="https://lasiya.ml"),Button.url("ü§ô Contact Dev üõ∂", url="https://t.me/Danuma_admin_bot")]],link_preview=True)


@datgbot.on(events.NewMessage(pattern="/help"))
async def helpp(event):
    await event.reply("**Help**\n\n ‡∂∏‡∑ô‡∂∫ ‡∂î‡∂∂‡∂ú‡∑ö ‡∂¥‡∑ä‚Äç‡∂ª‡∂∞‡∑è‡∂± ‡∂ú‡∑í‡∂´‡∑î‡∂∏‡∂ß ‡∂Ö‡∂∏‡∂≠‡∂ª ‡∂Ü‡∂ª‡∂ö‡∑ä‡∑Ç‡∑è‡∑Ä‡∂ö‡∑ä ‡∂Ω‡∂∂‡∑è‡∂Ø‡∑ì‡∂∏‡∂ß ‡∑É‡∂ö‡∑É‡∑ñ ‡∂∂‡∑ú‡∂ß‡∑ä ‡∂ö‡∑ô‡∂±‡∑ô‡∂ö‡∑í \n‡∂∏‡∑ô‡∂∏‡∂ú‡∑í‡∂±‡∑ä ‡∂î‡∂∂‡∂ú‡∑ö ‡∂ú‡∑í‡∂´‡∑î‡∂∏ ‡∂ª‡∑í‡∂¥‡∑ù‡∂ß‡∑ä ‡∑Ä‡∑ì‡∂∏‡∂ö‡∑í‡∂±‡∑ä ‡∂≠‡∑ú‡∂ª‡∑Ä ‡∂ï‡∂±‡∑ë‡∂∏ ‡∑É‡∂∏‡∑î‡∑Ñ‡∂∫‡∂ö‡∂ß ‡∑Ñ‡∑ù ‡∂†‡∑ê‡∂±‡∂Ω‡∂∫‡∂ö‡∂ß ‡∂¥‡∂´‡∑í‡∑Ä‡∑î‡∂© ‡∂∫‡∑ê‡∑Ä‡∑í‡∂∫ ‡∑Ñ‡∑ê‡∂ö.\n ‡∂î‡∂∂ ‡∂Ö‡∂Ø‡∑è‡∂Ω ‡∂†‡∑ê‡∂±‡∂Ω‡∂∫‡∂ö‡∂ß ‡∑Ñ‡∑ù ‡∑É‡∂∏‡∑î‡∑Ñ‡∂∫‡∂ö‡∂ß ‡∂∏‡∑ô‡∂∏ BOT ‡∑Ñ‡∂ª‡∑Ñ‡∑è ‡∂ë‡∂ö‡∑ä ‡∂ö‡∂Ω ‡∂¥‡∂´‡∑í‡∑Ä‡∑î‡∂©‡∂∫‡∂ö‡∑ä ‡∂ª‡∑í‡∂¥‡∑ù‡∂ß‡∑ä ‡∑Ä‡∑ì‡∂∏‡∂ö‡∂ß ‡∂Ω‡∂ö‡∑ä‡∑Ä‡∑î‡∑Ä‡∑Ñ‡∑ú‡∂≠‡∑ä ‡∂ª‡∑í‡∂¥‡∑ù‡∂ß‡∂ª‡∑ä ‡∑Ä‡∂±‡∑ä‡∂±‡∑ö \n  ‡∂∏‡∑ô‡∂∏ BOT ‡∑Ä‡∂± ‡∂Ö‡∂≠‡∂ª ‡∂î‡∂∂‡∂ú‡∑ö ‡∂ú‡∑í‡∂´‡∑î‡∂∏ ‡∂≠‡∑è‡∑Ä‡∂ö‡∑è‡∂Ω‡∑í‡∂ö ‡∑Ñ‡∑ù ‡∂¥‡∑î‡∂ª‡∑ä‡∂´ ‡∑É‡∑í‡∂∏‡∑Ä‡∑í‡∂∏‡∂ö‡∑ä ‡∑Ä‡∂±‡∑ä‡∂±‡∑ö ‡∂±‡∑ê‡∂≠ ")

@datgbot.on(events.NewMessage(incoming=True, chats=frm)) 
async def _(event): 
    if not event.is_private:
        try:
            await event.client.send_message(tochnl, event.message)
        except:
            print("TO_CHANNEL ID is wrong or I can't send messages there (make me admin).")


print("Bot has started.")
print("Visit @Danuma01")
datgbot.run_until_disconnected()
